<?php

namespace CrCms\Foundation\Swoole\Socket\Events;

use CrCms\Foundation\Swoole\Server\AbstractServer;
use CrCms\Foundation\Swoole\Server\Contracts\EventContract;
use CrCms\Foundation\Swoole\Server\Events\AbstractEvent;

class ReceiveEvent extends AbstractEvent implements EventContract
{
    /**
     * @var int
     */
    protected $fd;

    /**
     * @var int
     */
    protected $formId;

    /**
     * @var string
     */
    protected $data;

    /**
     * ReceiveEvent constructor.
     * @param int $fd
     * @param int $fromId
     * @param string $data
     */
    public function __construct(int $fd, int $fromId, string $data)
    {
        $this->fd = $fd;
        $this->formId = $fromId;
        $this->data = $data;
    }

    /**
     * @param AbstractServer $server
     */
    public function handle(AbstractServer $server): void
    {
        parent::handle($server); // TODO: Change the autogenerated stub

        //echo 'receive' . PHP_EOL;
        $data = json_decode($this->data,true);

        $rpc = new TestRpc();

        $result = call_user_func_array([$rpc, $data['name']], $data['params']);

        $this->server->send($this->fd,$result);
    }
}


class TestRpc
{

    public function test(int $arg1, int $arg2)
    {
        return $arg1 + $arg2;
    }

}