<?php

namespace CrCms\Foundation\Swoole\Events\WebSocket;

use CrCms\Foundation\App\WebSocket\Kernel;
use CrCms\Foundation\App\WebSocket\WebSocketControllerDispatcher;
use CrCms\Foundation\Swoole\Events\AbstractEvent;
use CrCms\Foundation\Swoole\Events\EventContract;
use Illuminate\Routing\Contracts\ControllerDispatcher;
use Swoole\Http\Request;
use Swoole\Http\Response;
use CrCms\Foundation\Swoole\Server;
use Swoole\WebSocket\Frame;

/**
 * Class MessageEvent
 * @package CrCms\Foundation\Swoole\Events
 */
class MessageEvent extends AbstractEvent implements EventContract
{
    protected $frame;

    public function __construct(Frame $frame)
    {
        $this->frame = $frame;
    }

    public function handle(Server $server) : void
    {
        parent::handle($server); // TODO: Change the autogenerated stub

        $class = (app())->make(ControllerDispatcher::class);

        $kernel = app()->make(Kernel::class);

        //dump(get_class());


        dump(get_class($class));
        if ($class instanceof WebSocketControllerDispatcher) {
            app(ControllerDispatcher::class)::setFrame($this->frame);
        }

//        dump($this->frame);

        $kernel->handle(
            $request = $this->swooleServer->open->getIlluminateRequest()
        );
//        dump($this->server->open->getRequest());
//        $this->server->on('request',[$this,'onRequest']);

        $this->swooleServer->push($this->frame->fd, "this is server");
        //$server->on('abc')
    }

    public function onRequest(Request $request, Response $response)
    {
        dump(123);
        dump($request->server['request_uri']);
    }
}